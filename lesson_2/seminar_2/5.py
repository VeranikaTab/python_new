# Задание №5
# ✔ Напишите программу, которая решает 
# квадратные уравнения даже если 
# дискриминант отрицательный. 
# ✔ Используйте комплексные числа для извлечения квадратного корня.
import cmath
from math import sqrt
"""
Комплексное число — это выражение вида a + bi, где a, b — действительные числа,
 а i — так называемая мнимая единица, символ, квадрат которого равен –1, 
 то есть i2 = –1. Число a называется действительной частью, 
 а число b — мнимой частью комплексного числа z = a + bi
"""

a = 5
b = -10
c = -400

d = b ** 2 - 4 * a * c
if d < 0:
    print(f"Дискриминант {d} меньше 0, корней нет")
elif d == 0:
    x = -b / (2 * a)
    print(f"Дискриминант: {d}; x = {x}")
else:
    x1 = (-b + d ** (1 / 2)) / (2 * a)
    x2 = (-b - d ** (1 / 2)) / (2 * a)
    print(f"Дискриминант: {d}; x1 = {x1}; x2 = {x2}")

# ----------------------------

a, b, c = int(input("Введите a: ")), int(input("Введите b: ")), int(input("Введите c: "))
discr = b ** 2 - 4 * a * c

if discr > 0:
    x1 = (-b + discr ** 0.5) / (2 * a) # x1 = (-b - math.sqrt(discr)) / (2 * a)
    x2 = (-b - discr ** 0.5) / (2 * a) # x2 = (-b + math.sqrt(discr)) / (2 * a)
    result = f"Корнями уравнения являются {x1=}, {x2=}"
elif discr == 0:
    x = -b / (2 * a)
    result = f"Уравнение имеет только один корень {x=}"
else:
    # discr: complex = complex(discr, 0)
    # x1 = (-b + discr ** 0.5) / (2 * a) # x1 = (-b + math.sqrt(discr)) / (2 * a)
    # x2 = (-b + discr ** 0.5) / (2 * a) # x2 = (-b + math.sqrt(discr)) / (2 * a)

    x1 = (-b + cmath.sqrt(discr)) / (2 * a)
    x2 = (-b - cmath.sqrt(discr)) / (2 * a)
    result = f"Комплексные корни уравнения равны {x1=}, {x2=}"

print(result)
#-----------------------------------------

# Мы можем использовать оператор «**» в Python, чтобы получить квадратный корень.
# Любое число, возведенное в степень 0.5, дает нам квадратный корень из этого числа.
# Квадратный корень из числа можно получить с помощью функции sqrt() из модуля math
# Когда мы передаем отрицательное число в качестве аргумента, мы получаем следующую
# ошибку «math domain error». Из чего следует, что аргумент должен быть больше 0.
# Для нахождения квадратного корня из комплексного числа мы также можем использовать функцию cmath.sqrt()

a = 5
b = -10
c = -400

d = b ** 2 - 4 * a * c
if d > 0:
    x1 = (-b + sqrt(d)) / (2 * a)
    x2 = (-b - sqrt(d)) / (2 * a)
    print(f"Дискриминант: {d}; x1 = {x1:.3f}; x2 = {x2:.3f}")
elif d == 0:
    x = -b / (2 * a)
    print(f"Дискриминант: {d}; x = {x:.3f}")
else:
    real = round(-b / (2 * a), 4)
    imaginary = round(sqrt(abs(d)) / (2 * a), 4)
    x1 = complex(real, imaginary)
    x2 = complex(real, -imaginary)
    print(f"Дискриминант: {d}; x1 = {x1}; x2 = {x2}")
